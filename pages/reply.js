import Head from 'next/head'
import  { useState, useEffect} from "react";
import axios from "axios";

import styles from '../styles/Home.module.css'
import {Typography,TextField, Grid,AppBar, Button,Container, Divider,Alert,Dialog,DialogTitle,DialogContent,Snackbar,DialogActions } from '@mui/material';
import { FcKindle } from "react-icons/fc";
import { BiMailSend } from "react-icons/bi";

export default function Reply() {

  const [snack, setSnack] =useState(false)
	const [snackData, setSnackData] = useState({ message: "", severity: "success" });
  const handleSnack = (d) => {
    setSnack(!snack);
    setSnackData(d)
  };

  const [openDialog, setOpenDialog]=useState(false)
  const [reply, setReply] = useState("")
  // const [showMsg, setShowMgs] = useState(false)
  const submitReply= async()=>{
     if(reply){
       let newData = {barnaliMessage:reply}
         let id = localStorage.getItem('id')
         await axios
			    .post(`https://searchkarna.com/api/v1/addition/barnali/sendMsg/${id}`,newData)
			    .then((res) => {
				  if(res.data.variant == "success") {
            alert(res.data.message);
            setOpenDialog(true)
				      }else {
					alert(res.data.message);
				}
			})
			.catch((err) => console.log(err));
      
    }else{
      handleSnack({message:"Please Write your reply first", severity:"warning"})
    }
  }

	// useEffect(() => {
  //   checkShowMsg()
		
	// }, []);
  // const checkShowMsg = async()=>{
  //   let id = localStorage.getItem('id')
	// 	await axios
	// 		.get(`https://searchkarna.com/api/v1/addition/barnali/checkForShowMsg/${id}`)
	// 		.then((res) => {
  //      console.log(res.data)
	// 			if (res.data) {
  //         if(res.data.showMsg)
  //       {  localStorage.setItem('showMsg', res.data.showMsg);
          
  //         setShowMgs(res.data.showMsg)}
	// 			} else {
	// 				alert(res.data.message);
	// 			}
	// 		})
	// 		.catch((err) => console.log(err));
  // }
  
  return (
<div className={styles.container}>
      <Head>
        <title>A Letter to Barnali</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <AppBar position="fixed" color="primary" style={{background: "#fff", padding:"10px", paddingBottom:"10px"}}  sx={{ top: 'auto', bottom: 0 }}>
          <Grid container spacing={2}>
            <Grid item xs={6} className={styles.center}>
  <Button  fullWidth style={{fontSize:"10px"}} href='https://barnali.globalsecurityint.com/Letter-to-Barnali.pdf' startIcon={<FcKindle />}>
  Download Letter
</Button>
            </Grid>
            <Grid item xs={6} className={styles.center}>
              <Button variant="contained" fullWidth onClick={()=>submitReply()}  endIcon={<BiMailSend />}> Reply </Button>
            </Grid>
          </Grid>
        </AppBar>
        <Container maxWidth="md" className={styles.messageContainer}>
            <div  className={styles.message}>
                <h1 className={styles.title}>
          {`Dear,`} <span>{`Barnali !`}</span>
        </h1>
        <h6> {`At this stage,I'm pretty sure you've read my letter and guessed my name too, but it is very hard to understand that how desperately I am waiting for your reply.`}</h6>
        <TextField
            autoFocus
            label="Please Write your Reply"
          multiline
          rows={12}
          fullWidth
          variant="filled"
          value={reply}
        onChange={e=>setReply(e.target.value)}
          />
            </div>
        </Container>
<br/>
 
<Dialog open={openDialog} onClose={()=>setOpenDialog(false)}>
        <DialogTitle>  <Typography textAlign="center" color="secondary" variant='body2'> Thank you, Barnali, for your reply.</Typography></DialogTitle>
          <DialogContent>
          <Typography textAlign="center">It is a really a great accomplishment for me.</Typography>
          <Typography textAlign="center" color="textSecondary">I hope that, you will consider it very personal and never share it with anyone.</Typography>
          <br/>
          <Divider/>
          <br/>
          <Typography textAlign="center"variant='body2' color="textSecondary">Bye-Bye & Take care of yourself.</Typography>
        </DialogContent>          

        
      </Dialog>

   <Snackbar open={snack} autoHideDuration={6000} onClose={()=>setSnack(false)}>
        <Alert onClose={()=>setSnack(false)} severity={snackData.severity} sx={{ width: '100%' }}>
          {snackData.message}
        </Alert>
      </Snackbar>

      </main>

      
    </div>
  )
}
