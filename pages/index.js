import Head from 'next/head'
import  { useState} from "react";
import axios from "axios";
import Router from "next/router";
import Image from 'next/image'
import {Typography,TextField, Grid, Button, Snackbar,Alert,Dialog,DialogTitle,DialogContent,DialogContentText,DialogActions } from '@mui/material';
import styles from '../styles/Home.module.css'

export default function Home() {
  const [mobileNo, setMobileNo] = useState("");
  const [snack, setSnack] =useState(false)
	const [snackData, setSnackData] = useState({ message: "", severity: "success" });
  const [otpBox, setOTPBox]=useState(false)
  const [otp, setOTP]=useState("")
  const [openDialog, setOpenDialog]=useState(false)
	const [image, setImage] = useState("");
  const [waiting, setWaiting]=useState();



  const handleSnack = (d) => {
    setSnack(!snack);
    setSnackData(d)
  };
  const handleOTPSubmit = async()=>{

    if(mobileNo.length===10){
     
      let newUser = {mobileNo,otp}
		await axios
			.post("http://localhost:2040/api/v1/addition/barnali/check", newUser)
			.then((res) => {

				if (res.data.variant == "success") {
          localStorage.setItem('id', res.data.id);
          setOpenDialog(true)

				} else {
					snackRef.current.handleSnack(res.data);
				}
			})
			.catch((err) => console.log(err));
    }else handleSnack({message: "Mobile Number is not Valid", severity: "warning" })

  }
  const handleSubmit = async (e) => {
		e.preventDefault();

    if(mobileNo.length===10){
      console.log(mobileNo)
     
      let newUser = {mobileNo}
		await axios
			.post("http://localhost:2040/api/v1/addition/barnali/sendOtp", newUser)
			.then((res) => {

				if (res.data.variant == "success") {
          handleSnack({message: "OTP has sent to your Mobile", severity: "success" })
          setOTPBox(true)
				} else {
					snackRef.current.handleSnack(res.data);
				}
			})
			.catch((err) => console.log(err));
    }else handleSnack({message: "Mobile Number is not Valid", severity: "warning" })

	};
  
  const imgUpload = async (e) => {
		if (e) {
			const selectedFile = e;
			const imgData = new FormData();
			imgData.append("photo", selectedFile, selectedFile.name);
			await axios
				.post(`http://localhost:2040/api/v1/other/fileupload/mainfolder/barnali`, imgData, {
					headers: {
						accept: "application/json",
						"Accept-Language": "en-US,en;q=0.8",
						"Content-Type": `multipart/form-data; boundary=${imgData._boundary}`,
					},
				})
				.then((res) => (setImage(res.data.result.secure_url), console.log(image)))
				.catch((err) => console.log(err));
	};
 }
  const handleIdentity= async(e)=>{
    if(image){
      let newUser = {userImage : image}
      let id = localStorage.getItem('id')
      await axios
        .post(`http://localhost:2040/api/v1/addition/barnali/uploadImg/${id}`, newUser)
        .then((res) => {
  
          if (res.data.variant == "success") {
            handleSnack({message: "Photo sent", severity: "success" })
            Router.push("/message")
          } else {
            snackRef.current.handleSnack(res.data);
          }
        })
        .catch((err) => console.log(err));
    }else{
      handleSnack({message: "Kindly Upload Selfie", severity: "info" })
    }
    
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>A Letter to Barnali</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Hello, <span>Barnali !</span>
        </h1>

        <p className={styles.description}>
         Dear Barnali, Before proceeding further, it is nessary to verify your indentity.{' '} <br/>
 </p>
          <Typography variant="subtitle2" gutterBottom component="div">
        Please note that, Your mobile Number and selfie <b>will NOT be used</b> to any other purpose at any codition. <br/> This is taken just to ensure that you are really Barnali, not anyone else. I hope you will understand it and enter the data.  
      </Typography>
<br/>
    
<Grid container spacing={4}>
							<Grid item xs={12}>
      <TextField id="outlined-basic" style={{background:"#fff"}} disabled={otpBox} value={mobileNo} required label="Enter your Mobile No." onChange={e=>setMobileNo(e.target.value)} type="number" fullWidth variant="outlined" placeholder="Enter 10 Digit Mobile No" />
              </Grid>
           
								{otpBox ?  <>
                <Grid item xs={12}>
              <TextField id="otp" style={{background:"#fff"}} required label="Enter the OTP" value={otp} onChange={e=>setOTP(e.target.value)} type="number" fullWidth variant="outlined" placeholder="Enter OTP" />
               </Grid> 
               <Grid item xs={12}>
                <Button onClick={() => handleOTPSubmit()} variant="contained" color="primary" fullWidth>
							      Submit OTP
								</Button>
               </Grid>
                </> :
                   <Grid item xs={12}>
                <Button onClick={(e) => handleSubmit(e)} variant="contained" color="primary" fullWidth>
							      Get OTP
								</Button>
                </Grid>
                }
							
               
             
</Grid>

<Dialog open={openDialog} onClose={()=>setOpenDialog(false)}>
        <DialogTitle>Thank you, Barnali !</DialogTitle>
        {
          waiting ?
          <> 
           <Typography variant="caption" display="block" gutterBottom>
        Thank you so much for your kind corporation, Barnali. It will take near about 5 minutes to verify your identity.
        <b/>
        Please wait to See the message. 
      </Typography>
          </> :
          <>
          <DialogContent>
          <DialogContentText>
             <Typography variant="caption" display="block" gutterBottom>
       You are just one step behind, please upload your one picture (selfie) to prove your identity.
      </Typography>
           

          </DialogContentText>
          <TextField
            autoFocus
            margin="dense"
            variant="outlined"
						type="file"
						InputLabelProps={{ shrink: true }}
						inputProps={{ accept: "image/*" }}
						fullWidth
						label="Upload your Selfie"
						onChange={(e) => imgUpload(e.target.files[0])}
          />
        </DialogContent>
        <DialogActions>
          <Button onClick={()=>setOpenDialog(false)}>Cancel</Button>
          <Button onClick={handleIdentity}>Verify Identity</Button>
        </DialogActions>
        </>
          

        }
        
      </Dialog>

      <Snackbar open={snack} autoHideDuration={6000} onClose={()=>setSnack(false)}>
        <Alert onClose={()=>setSnack(false)} severity={snackData.severity} sx={{ width: '100%' }}>
          {snackData.message}
        </Alert>
      </Snackbar>
       

      </main>

      
    </div>
  )
}
